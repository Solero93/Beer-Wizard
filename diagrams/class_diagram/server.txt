@startuml

class Network <<(F,orchid) Facade>>{
    .. Server ..
    - serverIP : String
    - serverPort : int
    .. Spells (Synchronous) ..
    + void castSpell(String idCasterUser, String idTargetUser, String idSpell, String[] params)
    .. User (Asynchronous) ..
    + void modifyUserProfile(String idUser, String name, String idAvatar)
    + void levelUp(String idUser)
    .. Enter Game ..
    + void enterGame(String ip)
    - void downloadUsers()
    .. Exit Game ..
    + void exitGame()
    .. User exits the game (Synchronous/Internal) ..
    - void userExitsGame(String idUser)
}
note right: levelUp() launches a BossException\nif encountering a Boss while leveling up

class Server {
    .. Database ..
    - userDb : Database
    - castingSpell : boolean
}

class ServerListener <<(T,green) Thread>> implements Runnable{
    .. Synchronous methods ..
    + void setStop()
    + boolean hasToStop()
}

Server <--> Network : communicates over the network
Server <--> SocketServer
Network <--> ServerListener : receives data from the server
ServerListener <--> SocketServer : listens for the server


class Game << (S,#FF7700) Singleton >>{
	-name : String
	-rule : String
	.. Users ..
	+void modifyUserProfile(byte idUser, String name, byte idAvatar)
	+void userExitsGame(byte idUser)
	.. Exit ..
	+void exitGame()
}

class User {
	-id : byte
	-name : String
	-level : byte
	-hasShield : boolean
	-avatarPhoto : byte

	+void levelUp()
	+void levelDown()
	+void modifyMyProfile(String name, byte idAvatar)
}

Game "1" --> "1..*" User: stores

@enduml