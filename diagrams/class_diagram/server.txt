@startuml

class NetworkHelper <<(F,orchid) Facade>>{
    +{static} byte createGame(Context context)
    +{static} void exitGame(Context context)
    +{static} void levelUp()
    +{static} void levelUp(String uuidUser)
    +{static} void levelDown(String uuidUser)
    +{static} void castSpell(String idCasterUser, String idTargetUser, int idSpell, String params)
}

class Server extends Service{
    -{static} TAG : final String = "ServerService"
    {static} bushandler : Bushandler
    -userDb : final ConcurrentHashMap<String, UserInterface>
    -reverseUserDb : final ConcurrentHashMap<UserInterface, String>
    +class BusHandler extends Handler
    
    +void onCreate()
    +int onStartCommand(Intent intent, int flags, int startId)
    +void onDestroy()
    +IBinder onBind(Intent intent)
    +void updateRule(String newRule) 
}

Server <--> NetworkHelper : communicates over the network

class GameData{
	-{static} spellsActivityHandler : Handler
	-{static} rule : String
	-{static} users : ConcurrentHashMap<String, UserInterface>
	
	static {System.loadLibrary("alljoyn_java");}
	
	+GameData()
	+void onCreate()
}

interface UserInterface{
	String getName()
	void setName(String name) 
	int getLevel() 
	void setLevel(int level) 
	int getAvatar() 
	void setAvatar(int avatar) 
	String getUUID() 
	void levelUp() 
	void levelDown() 
	void acceptsLevelUp(String uuid) 
	void castedSpell(int i, String uuid, String param) 
	void updateRule(String newRule) 
	String getRule() 
	void beJudge(String uuidCaster, String uuidVictim) 
	boolean getShield() 
	void setShield(boolean bool) 
}

class User implements UserInterface{
	-{static} TAG : final String = "User";
	-name : String
	-level : int
	-avatarPhoto : int
	-hasShield : boolean

	+User()
	+User(String name)
	+User(String name, int avatarPhoto)
}

GameData "1" --> "1..*" User: stores

class LocalAboutDataListener implements AboutDataListener{
	+Map<String, Variant> getAboutData(String language)
	+Map<String, Variant> getAnnouncedAboutData()
}

Server "1" --> "1" LocalAboutDataListener : has

@enduml