@startuml

class NetworkHelper <<(H,orchid) Helper>>{
    +{static} void createGame(Context context)
    +{static} void exitGame(Context context)
    +{static} void levelUp()
    +{static} void levelUp(String uuidUser)
    +{static} void levelDown(String uuidUser)
    +{static} void castSpell(String idCasterUser, String idTargetUser, int idSpell, String params)
}

class Server extends Service{
    -{static} TAG : final String = "ServerService"
    {static} bushandler : Bushandler
    -userDb : final ConcurrentHashMap<String, UserInterface>
    -reverseUserDb : final ConcurrentHashMap<UserInterface, String>
    +class BusHandler extends Handler
    
    +void onCreate()
    +int onStartCommand(Intent intent, int flags, int startId)
    +void onDestroy()
    +IBinder onBind(Intent intent)
    +void updateRule(String newRule) 
}

class BusHandler {
    + {static final} int CONNECT
    + {static final} int DISCONECT
    + {static final} int LEVEL_UP_USER
    + {static final} int JOIN_GAME
    + {static final} int UPDATE_RULE
    - {static final} short CONTACT_PORT
    - BusAttachment mBus
    - AboutObj aboutObj
    - LocalAboutDataListener aboutData
    - Observer observer
    
    +BusHandler(Looper looper)
    
    +void handleMessage(Message msg)
}
Server "1" <--> "1" BusHandler : Communicates to the rest of the network using it
Server "1" <-- "1" NetworkHelper : Sends messages to the server

class GameData{
	-{static} spellsActivityHandler : Handler
	-{static} rule : String
	-{static} users : ConcurrentHashMap<String, UserInterface>
	
	+GameData()
	+UserInterface getUser(String uuid)
	+UserInterface getUser(int position)
	+void onCreate()
}

interface UserInterface{
	String getName()
	void setName(String name) 
	int getLevel() 
	void setLevel(int level) 
	int getAvatar() 
	void setAvatar(int avatar) 
	String getUUID() 
	void levelUp() 
	void levelDown() 
	void acceptsLevelUp(String uuid) 
	void castedSpell(int i, String uuid, String param) 
	void updateRule(String newRule) 
	String getRule() 
	void beJudge(String uuidCaster, String uuidVictim) 
	boolean getShield() 
	void setShield(boolean bool) 
}

class User implements UserInterface{
	-{static} TAG : final String = "User";
	-name : String
	-level : int
	-avatarPhoto : int
	-hasShield : boolean

	+User(String name, int avatarPhoto)
}

NetworkHelper "1" --> "1" UserInterface : Interacts with the other users in the network
NetworkHelper "1" --> "1" BusHandler : Asks the network to level up
Server "1" --> "1" User : Announces to the network
GameData "1" --> "1..*" User: stores

class LocalAboutDataListener implements AboutDataListener{
	+Map<String, Variant> getAboutData(String language)
	+Map<String, Variant> getAnnouncedAboutData()
}

Server "1" --> "1" LocalAboutDataListener : announces this data to the network

@enduml